
export const projects =  [
    {
      id: 0,
      linkImage: "/images/portfolio-home-page.PNG",
      title: 'Portfolio',
      description: 'My motivation for this was to finish up my PortFolio and increase my probability of landing an IT job. I decided to do an electronic cv to go along with my paper cv as my paper cv was not giving me much hope.',
      miniDescription: "",
      url: 'https://twitt-er.vercel.app/',
      nameOfTechnologies: ["VUEJS","CSS","Javascript"],
      imageOfTechnologies: ["/images/vue.svg","/images/css.svg","/images/javascript.svg"],
      challenges: "My motivation was to get an IT job as an opportunity opened up for me to apply and I had no hope doing it the normal paper way as that has failed me many times.",
      projectImages: ["/images/portfolio-home-page.PNG", "/images/portfolio-projects-page.PNG", "/images/portfolio-projects-details.PNG","/images/portfolio-projects-details-whole.PNG"],
    },
    {
      id: 1,
      linkImage: "/images/apportioning.PNG",
      title: 'Ezy Apportioning',
      url: "https://apportioning.vercel.app/",
      description: 'My motivation for this was to help out a colleague who was having a hard time with apportioning and I decided to develop this so that it makes work easier and more efficient for the team.',
      nameOfTechnologies: ["NextJS","CSS","Javascript","Typescript","React"],
      imageOfTechnologies: ["/images/nextjs.svg","/images/css.svg","/images/javascript.svg","/images/typescript.svg","/images/react.svg"],
      projectImages: ["/images/apportioning.PNG", "/images/apportioning_errors.PNG", "/images/apportioning_calculations_done.PNG"],
      challenges: "This was me starting out at Typescript. I had so many challenges, even though I have tampered with Java in the past â€” syntax is usually the problem with most codes as I do not remember or have to keep looking up syntax. Formulating functions to do the calculation was most of the challenge for this. Heaps of console.log seeing what is going on."
    },
    {
      id: 2,
      linkImage: "/images/twitt-er.png",
      title: 'Twitt-er',
      description: 'My motivation was to make my own version of Twitter and design. My Twitt-er project has all the basic CRUD functionality, create post, read posts,  delete posts and has update profile as the normal twitter does not allow you to edit posts. I also implemented it here also.',
      miniDescription: "",
      url: 'https://twitt-er.vercel.app/',
      nameOfTechnologies: ["NextJS","CSS","Javascript", "Sanity","React", "Context API"],
      imageOfTechnologies: ["/images/nextjs.svg","/images/css.svg","/images/javascript.svg", "/images/sanity-red-on-white.svg","/images/react.svg", "/images/context-api.PNG"],
      challenges: "I had many challenges when trying to learn new Technologies. Technologies such as Sanity, NextJS and Context API. where I could not figure out for ages why I was not getting the latest data using their predefined function to retrieve data. After sometime and trying to talk to the sanity slack channel, reading through documentations and forums, a person from the slack channel told me to wrap the query in a encodeURIComponent but it did not work for me with the function supplied by Sanity and I decided to just use a normal await and fetch along with encodeURIComponent. Surprisingly it worked and it retrieved me the latest data when It is added. I was totally shocked and happy at the same time after taking so long to figure it out.",
      projectImages: ["/images/home_page_twitter.PNG", "/images/user_profile_page.PNG", "/images/other_user_profile_page.PNG"],
    },
    {
      id: 3,
      linkImage: "/images/jb-hi-kho.png",
      title: 'JB-Hi-Kho',
      description: 'My motivation was to do a better version of my first attempt of E-commerce and also learn NextJS. E-commerce store has all the functionality of a real store with stripe payments.',
      url: 'https://jb-hi-kho.vercel.app/ ',
      nameOfTechnologies: ["NextJS","CSS","Javascript","Stripe","React","Context API"],
      imageOfTechnologies: ["/images/nextjs.svg","/images/css.svg","/images/javascript.svg","/images/stripe-logo.png","/images/react.svg", "/images/context-api.PNG"],
      projectImages: ["/images/jb-hi-kho_home_page.PNG", "/images/jb-hi-kho_product_details_page.PNG", "/images/jb-hi-kho_cart.PNG" ,"/images/jb-hi-kho_stripe_completed_payments.PNG","/images/jb-hi-kho_stripe_payment.PNG"],
      challenges: "This was when I first started NextJS and Sanity. I Had so many challenges. In Sanity how to retrieve products, creating schema for products and trying to understand when to use Server Side Rendering (SSR) comparing it to Static Site Generation (SSG).",
      furtherInstructions: "You can repeat 42... for all credit card numbers for testing payments. This includes expire dates and CVV number."
    },
    {
      id: 4,
      linkImage: "/images/nft-landing-page.PNG",
      title: 'NFT landing page',
      url: "https://nft-market-place-landing-page.netlify.app/",
      description: 'My motivation was to create a landing page for the NFT project I did.',
      nameOfTechnologies: ["CSS","Javascript","React"],
      imageOfTechnologies: ["/images/css.svg","/images/javascript.svg","/images/react.svg"],
      projectImages: ["/images/nft-landing-page.PNG", "/images/nft-landing-page-technologies.PNG", "/images/nft-landing-page-source-code.PNG"],
      challenges: "Finding images to use, finding innovative ways to demonstrate the design, came across custom hooks and was learning that a bit."
    },
    {
      id: 5,
      linkImage: "/images/nft-home-page.png",
      title: 'React-Native NFT',
      url: "https://expo.dev/@khothach/nft-market-place?serviceType=classic&distribution=expo-go",
      description: 'My motivation was to learn a bit about React native. This was more of a UI/UX project trying to learn React Native.',
      nameOfTechnologies: ["CSS","Javascript","React Native"],
      imageOfTechnologies: ["/images/css.svg","/images/javascript.svg","/images/react.svg"],
      projectImages: ["/images/nft-home-page.png", "/images/nft-filter.png", "/images/nft-readmore.png","/images/nft-show-more.png"],
      challenges: "Trying to get my phone simulation to work but gave up and just used my phone instead thinking once I actually start doing React-Native properly I will focus on getting the phone simulation to work but for now just learn. Syntax was one I had to keep looking out for as to how to do mapping in this and you use a component called FlatList pass in your component as props in renderItems you want to run and passing keyExtractor if you want to give it a unique key like that of normal react key. It was more of a conversion of components and ways React Native did it was the challenge."
    },
    {
      id: 6,
      linkImage: "/images/vanilla-todos-no-todos.PNG",
      title: 'React Class components Todos',
      url: "https://class-base-todos.netlify.app/",
      description: 'My motivation was to learn some React from a Class base component and not a function component. So I decided to convert my vanilla todos to a React Class base component and added an extra feature of sign up and login. In addition to that, I wanted to play around with localStorage some more.',
      nameOfTechnologies: ["CSS","Javascript", "React"],
      imageOfTechnologies: ["/images/css.svg","/images/javascript.svg","/images/react.svg"],
      projectImages: ["/images/classbase-todos-login.PNG", "/images/classbase-todos-signup.PNG","/images/classbase-todos-checklist.PNG"],
      challenges: "I did not realize that the storage in localStorage had to be in string format and not object. Creating fun animations was a little challenging. I did not realize that there is an onTransitionEnd prop that gets called after all CSS animation is done, which helped me with my animation of deleting the todos that was from my vanilla todos."
    },
    {
      id: 7,
      linkImage: "/images/vanilla-todos-no-todos.PNG",
      title: 'Vanilla Todos',
      url: "https://todos-vanilla.netlify.app/",
      description: 'My motivation was to learn a bit about vanilla todos as this was my early stage of coding.',
      nameOfTechnologies: ["CSS","Javascript"],
      imageOfTechnologies: ["/images/css.svg","/images/javascript.svg"],
      imageOfTechnologiesDetails: ["/images/css.svg","src/assets/javascript.svg"],
      projectImages: ["/images/vanilla-todos-no-todos.PNG", "/images/vanilla-todos-checklist.PNG", "/images/vanilla-todos-completed.PNG","/images/vanilla-todos-uncompleted.PNG"],
      challenges: "Getting functions to work and adding and removing classes from a vanilla perspective as I started of mainly in React."
    },
    {
      id: 8,
      linkImage: "/images/bfa.PNG",
      title: 'My BestFriend App',
      url: "https://bestfriendapp.netlify.app/",
      description: 'My motivation was to put my learning I just completed my course to the test as I implemented redux into this project and also I wanted to learn about google maps api.',
      nameOfTechnologies: ["CSS","Javascript", "React", "Redux", "Google maps API"],
      imageOfTechnologies: ["/images/css.svg","/images/javascript.svg","/images/react.svg","/images/redux-icon.svg", "/images/Google_Maps_Logo.svg"],
      projectImages: ["/images/bfa.PNG", "/images/bff-mobile-map-icons.PNG","/images/bff-mobile.PNG"],
      challenges: "Learning how to use Google API. I had to create a lot of accounts in order to do this with limited request because I did not realize that everytime I shrunk the webpage to test responsiveness, it was requesting after every time I shrunk and enlarged the webpage..",
      allow: "Please allow Geolocation for this webpage to work.",
    },
    {
      id: 9,
      linkImage: "/images/amazon-login.PNG",
      title: 'My Amazon',
      url: "https://khos-17ce8.web.app/",
      description: 'My motivation was to use the knowledge I have obtained from my course as I just completed it â€” to make an E-commerce store.',
      nameOfTechnologies: ["CSS","Javascript", "React", "Redux", "Firebase"],
      imageOfTechnologies: ["/images/css.svg","/images/javascript.svg","/images/react.svg","/images/redux-icon.svg","/images/firebase-svg.svg"],
      projectImages: ["/images/amazon-home-page.PNG", "/images/amazon-login.PNG","/images/amazon-cart.PNG","/images/amazon-checkout.PNG","/images/amazon-order-history.PNG"],
      challenges: "Learning FireBase authentication and Firebase NoSQL query language. Learning to use the Firebase google website was hard for me as I was new.",
      furtherInstructions: "You can repeat 42... for all credit card numbers for testing payments. This includes expire dates and CVV number."
    },
   
  ]